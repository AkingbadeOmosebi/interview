name: Docker Build and Push

on:
  push:
    branches: [ main ] # Trigger automatically on pushes to main
  pull_request:
    branches: [ main ] # Also trigger on PRs for visibility

jobs:
  build_and_push:
    name: Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Checkout your code from the repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx (enables caching & multi-arch builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Step 4: Define image name and tags dynamically
      - name: Define Image Metadata
        id: meta
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/interview-app
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "VERSION_TAG=${IMAGE_NAME}:${SHORT_SHA}" >> $GITHUB_ENV
          echo "LATEST_TAG=${IMAGE_NAME}:latest" >> $GITHUB_ENV

      # Step 5: Build and push image with both tags
      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: |
            ${{ env.LATEST_TAG }}
            ${{ env.VERSION_TAG }}

      # Step 6: Output confirmation
      - name: Print Image Info
        run: |
          echo "Image successfully built and pushed!"
          echo "Latest: ${{ env.LATEST_TAG }}"
          echo "Commit Tag: ${{ env.VERSION_TAG }}"
