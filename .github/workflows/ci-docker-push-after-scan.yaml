name: Push Image to GHCR

on:
  workflow_run:
    workflows: ["Build and Scan with Trivy"] 
    types: [completed]
# I want it to only push after the build and scan condition has been met or is successful,
# to prevent vulnerable images from being pushed to my private registry.

jobs:
  push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    # This ensures the workflow only runs if the Trivy scan was successful.

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write 
      # Required to push to GHCR

    env:
      IMAGE_NAME: interview-app
      SHORT_SHA: ${{ github.sha }}
      SEMVER: 1.0.${{ github.run_number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if app code changed
        # This is to skip biuld and push if there is no change in my application code, helps me prevent redudntant images in regisryy
        run: |
          git fetch --depth=2
          if git diff --quiet HEAD^ HEAD -- ./app; then
            echo "No changes in app, skipping Docker build and push."
            exit 0
          fi

      - name: Log in to GHCR
        # Using my already crafted personal access token stored as GHCR_PAT secret
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set lowercase registry and short SHA
        run: |
          # Convert GitHub repository owner to lowercase for Docker and prefix ghcr.io
          REGISTRY="ghcr.io/$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')"
          SHORT_SHA=${GITHUB_SHA::7}
          echo "REGISTRY=$REGISTRY" >> $GITHUB_ENV
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "SEMVER=$SEMVER" >> $GITHUB_ENV

      - name: Build Docker image again before push
        # The image built in the previous workflow does not persist between jobs. Basically, new ubuntu runner, needs its own image build
        # so we need to rebuild it before tagging and pushing.
        run: |
          docker build -t $IMAGE_NAME:$SHORT_SHA -t $IMAGE_NAME:latest -t $IMAGE_NAME:$SEMVER ./app

      - name: Push image to GHCR
        run: |
          docker tag $IMAGE_NAME:latest $REGISTRY/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:$SHORT_SHA $REGISTRY/$IMAGE_NAME:$SHORT_SHA
          docker tag $IMAGE_NAME:$SEMVER $REGISTRY/$IMAGE_NAME:$SEMVER
          docker push $REGISTRY/$IMAGE_NAME:latest
          docker push $REGISTRY/$IMAGE_NAME:$SHORT_SHA
          docker push $REGISTRY/$IMAGE_NAME:$SEMVER
